{"version":3,"sources":["logo.svg","Components/js/sidebar.js","Components/js/Tweet.js","Components/js/UserFeed.js","Components/js/UserProfile.js","Components/js/Sidebarmore.js","Components/js/Reply.js","Components/js/Replies.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Sidebar","props","handleResize","bind","sidebarmoremenu","document","getElementById","style","display","more_element","left","offsetLeft","top","offsetTop","scrollHeight","window","innerHeight","clientHeight","parseInt","addEventListener","this","zIndex","className","id","icon","faHome","size","color","faHashtag","faBell","faEnvelope","faBookmark","faListAlt","faUser","onClick","ShowSideBarMoreMenu","faEllipsisH","faPlus","Component","Tweet","state","username","handle","profilePicture","tweetedUTC","comments","retweets","likes","text","retweet_bool","undefined","data","setState","retweet_count","favorite_count","user","name","profile_picture_url","screen_name","retweeted","faRetweet","src","faComments","faHeart","React","UserFeed","feed","map","item","UserProfile","profile_name","joinedUTC","following","followers","profile_url","most_recent_inifinite_scroll_update","banner_url","getMoreTweets","Date","getTime","fetch","then","r","json","new_feed","forEach","i","push","match","params","follower_count","following_count","banner_picture_url","infinite_scroll","IntersectionObserver","rootMargin","threshold","observe","profileCreatedDate","faSpinner","width","height","toDateString","Sidebarmoremenu","ClickOffSideBar","faComment","faBolt","faAd","faChartBar","faCog","faQuestionCircle","faTv","Reply","quoteTweetNum","time","formattedTime","intToMonth","0","1","2","3","4","5","6","7","8","9","10","11","date","hour","getHours","minutes","getMinutes","month","getMonth","day","getDay","year","getFullYear","dateString","epochToString","App","path","component","Sidebarmore","Boolean","location","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e2bc7f77.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\nimport '../css/Sidebar.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBell, faEnvelope, faBookmark, faListAlt, faUser } from '@fortawesome/free-regular-svg-icons'\r\nimport { faHashtag, faHome, faPlus, faEllipsisH } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nclass Sidebar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleResize = this.handleResize.bind(this);\r\n    }\r\n\r\n\r\n    handleResize() {\r\n        let sidebarmoremenu = document.getElementById(\"sidebar-moremenu\");\r\n        if (sidebarmoremenu.style.display === 'block') {\r\n            let more_element = document.getElementById(\"sidebar-more\");\r\n            let left = more_element.offsetLeft;\r\n            let top = more_element.offsetTop;\r\n\r\n            if (sidebarmoremenu.scrollHeight > window.innerHeight) {\r\n                sidebarmoremenu.style.top = \"0px\";\r\n            }\r\n            else if (more_element.offsetTop + more_element.clientHeight > window.innerHeight) {\r\n                sidebarmoremenu.style.top = (window.innerHeight - sidebarmoremenu.clientHeight) + \"px\";\r\n            }\r\n            else {\r\n                sidebarmoremenu.style.top = (top - sidebarmoremenu.clientHeight + more_element.clientHeight) + 'px';\r\n            }\r\n            if (sidebarmoremenu.offsetTop < 0) {\r\n                sidebarmoremenu.style.top = parseInt(sidebarmoremenu.style.top) - sidebarmoremenu.offsetTop + \"px\";\r\n            }\r\n            sidebarmoremenu.style.left = left + 'px';\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener(\"resize\", this.handleResize);\r\n    }\r\n\r\n    ShowSideBarMoreMenu() {\r\n        let sidebarmoremenu = document.getElementById(\"sidebar-moremenu\");\r\n        if (sidebarmoremenu.style.display === 'none' || sidebarmoremenu.style.display === \"\") {\r\n            sidebarmoremenu.style.display = 'block';\r\n            sidebarmoremenu.style.zIndex = 10;\r\n            document.getElementById(\"sidebar-moremenu-clickoffdiv\").style.zIndex = 9;\r\n        }\r\n        else {\r\n            sidebarmoremenu.style.display = 'none';\r\n            document.getElementById(\"sidebar-moremenu-clickoffdiv\").style.zIndex = -100;\r\n        }\r\n\r\n        let more_element = document.getElementById(\"sidebar-more\");\r\n        let left = more_element.offsetLeft;\r\n        let top = more_element.offsetTop;\r\n\r\n        if (sidebarmoremenu.scrollHeight > window.innerHeight) {\r\n            sidebarmoremenu.style.top = \"0px\";\r\n        }\r\n        else if (more_element.offsetTop + more_element.clientHeight > window.innerHeight) {\r\n            sidebarmoremenu.style.top = (window.innerHeight - sidebarmoremenu.clientHeight) + \"px\";\r\n        }\r\n        else {\r\n            sidebarmoremenu.style.top = (top - sidebarmoremenu.clientHeight + more_element.clientHeight) + 'px';\r\n        }\r\n        if (sidebarmoremenu.offsetTop < 0) {\r\n            sidebarmoremenu.style.top = parseInt(sidebarmoremenu.style.top) - sidebarmoremenu.offsetTop + \"px\";\r\n        }\r\n        sidebarmoremenu.style.left = left + 'px';\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"sidebar-container\"}>\r\n                <div id={\"sidebar-home\"} className={\"sidebar-container-element\"}>\r\n                    <button className=\"sidebar-button\"><FontAwesomeIcon icon={faHome} size=\"1x\" color=\"white\" /> <span className={\"side-bar-text\"}>Home</span></button>\r\n                </div>\r\n                <div id={\"sidebar-explore\"} className={\"sidebar-container-element\"}>\r\n                    <button className=\"sidebar-button\"><FontAwesomeIcon icon={faHashtag} size=\"1x\" color=\"white\" /> <span className={\"side-bar-text\"}>Explore</span></button>\r\n                </div>\r\n                <div id={\"sidebar-notifications\"} className={\"sidebar-container-element\"}>\r\n                    <button className=\"sidebar-button\"><FontAwesomeIcon icon={faBell} size=\"1x\" color=\"white\" /> <span className={\"side-bar-text\"}>Notifications</span></button>\r\n                </div>\r\n                <div id={\"sidebar-messages\"} className={\"sidebar-container-element\"}>\r\n                    <button className=\"sidebar-button\"><FontAwesomeIcon icon={faEnvelope} size=\"1x\" color=\"white\" /> <span className={\"side-bar-text\"}>Messages</span></button>\r\n                </div>\r\n                <div id={\"sidebar-bookmarks\"} className={\"sidebar-container-element\"}>\r\n                    <button className=\"sidebar-button\"><FontAwesomeIcon icon={faBookmark} size=\"1x\" color=\"white\" /> <span className={\"side-bar-text\"}>Bookmarks</span></button>\r\n                </div>\r\n                <div id={\"sidebar-lists\"} className={\"sidebar-container-element\"}>\r\n                    <button className=\"sidebar-button\"><FontAwesomeIcon icon={faListAlt} size=\"1x\" color=\"white\" /> <span className={\"side-bar-text\"}>Lists</span></button>\r\n                </div>\r\n                <div id={\"sidebar-profile\"} className={\"sidebar-container-element\"}>\r\n                    <button className=\"sidebar-button\"><FontAwesomeIcon icon={faUser} size=\"1x\" color=\"white\" /> <span className={\"side-bar-text\"}>Profile</span></button>\r\n                </div>\r\n                <div className={\"sidebar-container-element\"} id={\"sidebar-more\"}>\r\n                    <button className=\"sidebar-button\" onClick={this.ShowSideBarMoreMenu}><FontAwesomeIcon icon={faEllipsisH} size=\"1x\" color=\"white\" /> <span className={\"side-bar-text\"}>More</span></button>\r\n                </div>\r\n                <div className={\"sidebar-container-element\"}>\r\n                    <button className=\"tweet-button\">\r\n                        <span className={\"side-bar-text\"}>\r\n                            Tweet\r\n                            </span>\r\n                        <span className={\"tweet-plus-icon\"}>\r\n                            <FontAwesomeIcon icon={faPlus} size=\"1x\" color=\"white\" />\r\n                        </span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport '../css/Tweet.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faComments, faHeart } from '@fortawesome/free-regular-svg-icons'\r\nimport { faRetweet } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass Tweet extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: null,\r\n            handle: null,\r\n            profilePicture: null,\r\n            tweetedUTC: null,\r\n            comments: 101,\r\n            retweets: null,\r\n            likes: null,\r\n            text: null,\r\n            retweet_bool: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.data !== undefined) {\r\n            this.setState({\r\n                text: this.props.data.text,\r\n                retweets: this.props.data.retweet_count,\r\n                likes: this.props.data.favorite_count,\r\n                username: this.props.data.user.name,\r\n                profilePicture: this.props.data.user.profile_picture_url,\r\n                handle: this.props.data.user.screen_name,\r\n                retweet_bool: this.props.data.retweeted\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"tweet\"}>\r\n                <div id={\"retweeted_by_message\"}>\r\n                    {this.state.retweet_bool &&\r\n                        <span>\r\n                            <FontAwesomeIcon icon={faRetweet}></FontAwesomeIcon> Retweeted by @{this.props.screen_name}\r\n                        </span>\r\n                    }\r\n                </div>\r\n                <img className={\"tweet-profile-picture\"} src={this.state.profilePicture}></img>\r\n                <div className={\"tweet-content\"}>\r\n                    <div>\r\n                        <span className={\"text-bolder\"}>{this.state.username}</span> <span className={\"text-lighter\"}>@{this.state.handle} 14h</span>\r\n                    </div>\r\n                    <div>\r\n                        {this.state.text}\r\n                    </div>\r\n                    <div className={\"engagement-grid text-lighter\"}>\r\n                        <div className={\"tweet-comment-number\"}>\r\n                            <FontAwesomeIcon icon={faComments} size=\"1x\" color=\"rgb(136, 153, 166)\" /> {this.state.comments}\r\n                        </div>\r\n                        <div className={\"tweet-retweet-number\"}>\r\n                            <FontAwesomeIcon icon={faRetweet} size=\"1x\" color=\"rgb(136, 153, 166)\" /> {this.state.retweets}\r\n                        </div>\r\n                        <div className={\"tweet-like-number\"}>\r\n                            <FontAwesomeIcon icon={faHeart} size=\"1x\" color=\"rgb(136, 153, 166)\" /> {this.state.likes}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Tweet;","import React from 'react';\r\nimport Tweet from './Tweet';\r\nimport '../css/UserFeed.css'\r\n\r\nclass UserFeed extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className={\"feed-buttons\"}>\r\n                    <button className={\"feed-button feed-tweets-button\"}>Tweets</button>\r\n                    <button className={\"feed-button feed-tweetsreplies-button\"}>Tweets & replies</button>\r\n                    <button className={\"feed-button feed-media-button\"}>Media</button>\r\n                    <button className={\"feed-button feed-likes-button\"}>Likes</button>\r\n                </div>\r\n\r\n                <div id={\"feed-container\"}>\r\n                    {this.props.feed && this.props.feed.map(item =>\r\n                        <Tweet data={item} screen_name={this.props.screen_name}></Tweet>\r\n                    )}\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserFeed;","import { faComments } from '@fortawesome/free-regular-svg-icons';\r\nimport { faBorderNone, faNetworkWired, faSpinner } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport '../css/UserProfile.css'\r\nimport UserFeed from './UserFeed';\r\n\r\n\r\nclass UserProfile extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            profile_name: null,\r\n            name: null,\r\n            screen_name: null,\r\n            joinedUTC: null,\r\n            following: null,\r\n            followers: null,\r\n            feed: null,\r\n            profile_url: null,\r\n            most_recent_inifinite_scroll_update: null,\r\n            banner_url: null\r\n        }\r\n        this.getMoreTweets = this.getMoreTweets.bind(this);\r\n    }\r\n\r\n    getMoreTweets() {\r\n\r\n        if (this.state.feed === null || new Date().getTime() < this.state.most_recent_inifinite_scroll_update + 1000 ) {\r\n            return;\r\n        }\r\n        this.setState({most_recent_inifinite_scroll_update: new Date().getTime()})\r\n\r\n        fetch(`/home/GetUserTweets?username=${this.state.profile_name}`).then(r => r.json()).then(r => {\r\n            var new_feed = this.state.feed;\r\n            r.forEach(i => {\r\n                new_feed.push(i);\r\n            });\r\n            this.setState({ feed: new_feed });\r\n        });\r\n        document.getElementById(\"infinite-scroll\").style.top = \"100%\";\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ profile_name: this.props.match.params.user })\r\n\r\n        fetch(`/home/GetUserDetails?username=${this.props.match.params.user}`).then(r => r.json()).then(r => {\r\n            this.setState({\r\n                name: r.name,\r\n                screen_name: r.screen_name,\r\n                followers: r.follower_count,\r\n                following: r.following_count,\r\n                profile_url: r.profile_picture_url,\r\n                banner_url: r.banner_picture_url\r\n            })\r\n        }\r\n        );\r\n        fetch(`/home/GetUserTweets?username=${this.props.match.params.user}`).then(r => r.json()).then(r => this.setState({ feed: r }));\r\n\r\n        let infinite_scroll = document.getElementById(\"infinite-scroll\")\r\n        let options = {\r\n            rootMargin: '0px',\r\n            threshold: 0.1\r\n        }\r\n        let observer = new IntersectionObserver(this.getMoreTweets, options);\r\n        observer.observe(infinite_scroll);\r\n    }\r\n\r\n    render() {\r\n        var profileCreatedDate = new Date(this.state.joinedUTC * 1000);\r\n        return (\r\n            <div >\r\n                {!this.state.feed && <div id={\"page-loading-overlay\"}>\r\n                    <div id={\"spin-animation\"}>\r\n                        <FontAwesomeIcon icon={faSpinner} size=\"9x\" color=\"rgb(136, 153, 166)\" /> {this.state.comments}\r\n                    </div>\r\n                </div>}\r\n\r\n                <div className={\"profile-details\"}>\r\n                    <div>\r\n                        <div className={\"overlay\"}>\r\n                            <div className={\"banner-image\"}><img src={this.state.banner_url} width={\"100%\"}></img></div>\r\n                            <div className={\"circular-image\"}><img src={this.state.profile_url} height={\"100%\"}></img></div>\r\n                        </div>\r\n\r\n                        <div className={\"profile-content\"}>\r\n                            <div className={\"username profile-detail\"}>{this.state.name}</div>\r\n                            <div className={\"handle profile-detail\"}>@{this.state.screen_name}</div>\r\n                            <div className={\"join-date profile-detail\"}>Joined {profileCreatedDate.toDateString()}</div>\r\n                            <span className={\"following-count profile-detail\"}><span className={\"follow-number\"}>{this.state.following}</span> Following</span>\r\n                            <span className={\"follower-count profile-detail\"}><span className={\"follow-number\"}>{this.state.followers}</span> Followers</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <UserFeed feed={this.state.feed} screen_name={this.state.screen_name} />\r\n                <div id={\"infinite-scroll\"}></div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserProfile","import React, { Component } from 'react';\r\nimport '../css/Sidebar.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBell, faBookmark, faChartBar, faComment, faEnvelope, faListAlt, faQuestionCircle } from '@fortawesome/free-regular-svg-icons'\r\nimport { faAd, faBolt, faCog, faTv } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass Sidebarmoremenu extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.ClickOffSideBar = this.ClickOffSideBar.bind(this)\r\n    }\r\n\r\n    ClickOffSideBar() {\r\n        let sidebarmoremenu = document.getElementById(\"sidebar-moremenu\");\r\n        sidebarmoremenu.style.display = 'none';\r\n        document.getElementById(\"sidebar-moremenu-clickoffdiv\").style.zIndex = -100;\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div id={\"sidebar-moremenu\"}>\r\n\r\n                    <div className={\"sidebar-moremenu-element\"}>\r\n                        <button className={\"sidebar-moremenu-button\"}>\r\n                            <FontAwesomeIcon icon={faComment} size=\"1x\" color=\"white\" />\r\n                            &nbsp;&nbsp;Topics\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className={\"sidebar-moremenu-element\"}>\r\n                        <button className={\"sidebar-moremenu-button\"}>\r\n                            <FontAwesomeIcon icon={faBolt} size=\"1x\" color=\"white\" />\r\n                            &nbsp;&nbsp;Moments\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className={\"sidebar-moremenu-element\"}>\r\n                        <button className={\"sidebar-moremenu-button\"}>\r\n                            <FontAwesomeIcon icon={faAd} size=\"1x\" color=\"white\" />\r\n                            &nbsp;&nbsp;Twitter Ads\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className={\"sidebar-moremenu-element\"}>\r\n                        <button className={\"sidebar-moremenu-button\"}>\r\n                            <FontAwesomeIcon icon={faChartBar} size=\"1x\" color=\"white\" />\r\n                            &nbsp;&nbsp;Analytics\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div id={\"sidebar-moremenu-notifications\"} className={\"sidebar-moremenu-element\"}>\r\n                        <button className=\"sidebar-moremenu-button\">\r\n                            <FontAwesomeIcon icon={faBell} size=\"1x\" color=\"white\" />\r\n                            &nbsp;&nbsp;Notifications\r\n                        </button>\r\n                    </div>\r\n                    <div id={\"sidebar-moremenu-messages\"} className={\"sidebar-moremenu-element\"}>\r\n                        <button className=\"sidebar-moremenu-button\">\r\n                            <FontAwesomeIcon icon={faEnvelope} size=\"1x\" color=\"white\" />\r\n                            &nbsp;&nbsp;Messages\r\n                        </button>\r\n                    </div>\r\n                    <div id={\"sidebar-moremenu-bookmarks\"} className={\"sidebar-moremenu-element\"}>\r\n                        <button className=\"sidebar-moremenu-button\">\r\n                            <FontAwesomeIcon icon={faBookmark} size=\"1x\" color=\"white\" />\r\n                            &nbsp;&nbsp;Bookmarks\r\n                    </button>\r\n                    </div>\r\n                    <div id={\"sidebar-moremenu-lists\"} className={\"sidebar-moremenu-element\"}>\r\n                        <button className=\"sidebar-moremenu-button\">\r\n                            <FontAwesomeIcon icon={faListAlt} size=\"1x\" color=\"white\" />\r\n                            &nbsp;&nbsp;Lists\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className={\"sidebar-moremenu-break\"}></div>\r\n\r\n                    <div className={\"sidebar-moremenu-element\"}>\r\n                        <button className={\"sidebar-moremenu-button\"}>\r\n                            <FontAwesomeIcon icon={faCog} size=\"1x\" color=\"white\" />\r\n                            &nbsp;&nbsp;Settings & privacy\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className={\"sidebar-moremenu-element\"}>\r\n                        <button className={\"sidebar-moremenu-button\"}>\r\n                            <FontAwesomeIcon icon={faQuestionCircle} size=\"1x\" color=\"white\" />\r\n                            &nbsp;&nbsp;Help center\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className={\"sidebar-moremenu-element\"}>\r\n                        <button className={\"sidebar-moremenu-button\"}>\r\n                            <FontAwesomeIcon icon={faTv} size=\"1x\" color=\"white\" />\r\n                            &nbsp;&nbsp;Display\r\n                        </button>\r\n                    </div>\r\n\r\n                </div>\r\n                <button id={\"sidebar-moremenu-clickoffdiv\"} onClick={this.ClickOffSideBar}></button>\r\n            </div >\r\n        );\r\n    }\r\n}\r\nexport default Sidebarmoremenu;\r\n","import React, { Component } from 'react';\r\nimport '../css/Reply.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faComments, faHeart } from '@fortawesome/free-regular-svg-icons'\r\nimport { faRetweet } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nclass Reply extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"The Void\",\r\n            handle: \"GazeWithin\",\r\n            profilePicture: \"https://pbs.twimg.com/profile_images/1311487905928417280/jN96sBXm_400x400.jpg\",\r\n            tweetedUTC: null,\r\n            comments: 101,\r\n            retweets: 101,\r\n            likes: 101,\r\n            quoteTweetNum: 101,\r\n            text: \"holy shit imagine if Trump suddenly finds the \\\"go live\\\" button on Twitter\",\r\n            time: 1602083791000,\r\n            formattedTime: null,\r\n            intToMonth: { 0: \"Jan\", 1: \"Feb\", 2: \"Mar\", 3: \"Apr\", 4: \"May\", 5: \"Jun\", 6: \"Jul\", 7: \"Aug\", 8: \"Sep\", 9: \"Oct\", 10: \"Nov\", 11: \"Dec\" }\r\n        }\r\n    }\r\n\r\n    epochToString() {\r\n        let date = new Date(this.state.time);\r\n        let hour = date.getHours();\r\n        let minutes = date.getMinutes()\r\n        let month = date.getMonth();\r\n        let day = date.getDay();\r\n        let year = date.getFullYear();\r\n        let dateString = `${hour}:${minutes} · ${this.state.intToMonth[month]} ${day}, ${year}`;\r\n        this.setState({ formattedTime: dateString });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.epochToString();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"replies-reply reply-grid\"}>\r\n                <div className={\"reply-grid-left\"}>\r\n                    <img className={\"tweet-profile-picture-small\"} src={this.state.profilePicture}></img>\r\n                </div>\r\n                <div className={\"reply-grid-right\"}>\r\n                    <div className={\"replies-reply-header\"}>\r\n                        <span className={\"replies-reply-header-text\"}>\r\n                            <span className={\"text-bolder\"}>{this.state.username}</span>\r\n                            <span className={\"text-lighter\"}>@{this.state.handle}</span>\r\n                        </span>\r\n                    </div>\r\n                    <div className={\"replies-reply-content\"}>\r\n                        {this.state.text}\r\n                    </div>\r\n\r\n                    <div className={\"replies-engagement engagement-grid text-lighter\"}>\r\n                        <div className={\"tweet-comment-number\"}>\r\n                            <FontAwesomeIcon icon={faComments} size=\"1x\" color=\"rgb(136, 153, 166)\" /> {this.state.comments}\r\n                        </div>\r\n                        <div className={\"tweet-retweet-number\"}>\r\n                            <FontAwesomeIcon icon={faRetweet} size=\"1x\" color=\"rgb(136, 153, 166)\" /> {this.state.retweets}\r\n                        </div>\r\n                        <div className={\"tweet-like-number\"}>\r\n                            <FontAwesomeIcon icon={faHeart} size=\"1x\" color=\"rgb(136, 153, 166)\" /> {this.state.likes}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Reply;\r\n","import React, { Component } from 'react';\r\nimport '../css/Replies.css'\r\nimport Reply from '../js/Reply'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faComments, faHeart, faUser } from '@fortawesome/free-regular-svg-icons'\r\nimport { faRetweet, faUserCircle } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nclass Replies extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"The Void\",\r\n            handle: \"GazeWithin\",\r\n            profilePicture: \"https://pbs.twimg.com/profile_images/1311487905928417280/jN96sBXm_400x400.jpg\",\r\n            tweetedUTC: null,\r\n            comments: 101,\r\n            retweets: 101,\r\n            likes: 101,\r\n            quoteTweetNum: 101,\r\n            text: \"holy shit imagine if Trump suddenly finds the \\\"go live\\\" button on Twitter\",\r\n            time: 1602083791000,\r\n            formattedTime: null,\r\n            intToMonth: { 0: \"Jan\", 1: \"Feb\", 2: \"Mar\", 3: \"Apr\", 4: \"May\", 5: \"Jun\", 6: \"Jul\", 7: \"Aug\", 8: \"Sep\", 9: \"Oct\", 10: \"Nov\", 11: \"Dec\" }\r\n        }\r\n    }\r\n\r\n    epochToString() {\r\n        let date = new Date(this.state.time);\r\n        let hour = date.getHours();\r\n        let minutes = date.getMinutes()\r\n        let month = date.getMonth();\r\n        let day = date.getDay();\r\n        let year = date.getFullYear();\r\n        let dateString = `${hour}:${minutes} · ${this.state.intToMonth[month]} ${day}, ${year}`;\r\n        this.setState({ formattedTime: dateString });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.epochToString();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"replies-tweet\"}>\r\n                <div id={\"replies-tweet-header\"}>\r\n                    <img className={\"tweet-profile-picture\"} src={this.state.profilePicture}></img>\r\n                    <div id={\"replies-tweet-header-text\"}>\r\n                        <div className={\"text-bolder\"}>{this.state.username}</div>\r\n                        <div className={\"text-lighter\"}>@{this.state.handle}</div>\r\n                    </div>\r\n                </div>\r\n                <div id={\"replies-tweet-content\"}>\r\n                    {this.state.text}\r\n                </div>\r\n                <div id={\"replies-tweet-time\"} className={\"text-lighter\"}>\r\n                    {this.state.formattedTime} · Twitter Web App\r\n                </div>\r\n                <div className={\"horizontal-line-break\"}></div>\r\n                <div className={\"replies-engagement\"}>\r\n                    <span className={\"text-lighter\"}><span className={\"text-white-bold\"}>{this.state.retweets}</span> Retweets</span>\r\n                    <span className={\"text-lighter\"}><span className={\"text-white-bold\"}>{this.state.quoteTweetNum}</span> Quote Tweets</span>\r\n                    <span className={\"text-lighter\"}><span className={\"text-white-bold\"}>{this.state.likes}</span> Likes</span>\r\n                </div>\r\n                <div className={\"horizontal-line-break\"}></div>\r\n\r\n                <div className={\"replies-engagement engagement-grid text-lighter\"}>\r\n                    <div className={\"tweet-comment-number\"}>\r\n                        <FontAwesomeIcon icon={faComments} size=\"1x\" color=\"rgb(136, 153, 166)\" /> {this.state.comments}\r\n                    </div>\r\n                    <div className={\"tweet-retweet-number\"}>\r\n                        <FontAwesomeIcon icon={faRetweet} size=\"1x\" color=\"rgb(136, 153, 166)\" /> {this.state.retweets}\r\n                    </div>\r\n                    <div className={\"tweet-like-number\"}>\r\n                        <FontAwesomeIcon icon={faHeart} size=\"1x\" color=\"rgb(136, 153, 166)\" /> {this.state.likes}\r\n                    </div>\r\n                </div>\r\n\r\n                <div id={\"tweet-your-reply\"}>\r\n                    <FontAwesomeIcon icon={faUserCircle} size=\"2x\" color=\"rgb(136, 153, 166)\" />\r\n                    <span id={\"tweet-your-reply-text\"}>\r\n                        Tweet your reply\r\n                    </span>\r\n                </div>\r\n                <Reply>\r\n                </Reply>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Replies;\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './Components/css/App.css'\nimport Sidebar from './Components/js/sidebar';\nimport UserProfile from './Components/js/UserProfile';\nimport Sidebarmoremenu from './Components/js/Sidebarmore';\nimport Replies from './Components/js/Replies'\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <div className={\"grid-container\"}>\n                <div className={\"item1\"}>\n                    <Sidebar />\n                </div>\n                <div className={\"item2\"}>\n                    {/* <Replies></Replies> */}\n                    <Router>\n                        <Route path={`/:user`} component={UserProfile} />\n                    </Router>\n\n                </div>\n            </div>\n            <Sidebarmoremenu />\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}